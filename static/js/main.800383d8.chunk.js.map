{"version":3,"sources":["Components/Clock.tsx","App.tsx","index.tsx"],"names":["Clock","state","date","Date","timerId","this","setInterval","setState","console","log","toLocaleTimeString","clearInterval","React","Component","App","randomName","isClockVisible","_prevProps","prevState","handleSwitcher","typeBtn","className","type","onClick","name","String","Math","round","random","ReactDOM","render","document","getElementById"],"mappings":"sNAMMA,E,4MACJC,MAAe,CACbC,KAAM,IAAIC,M,EAGZC,a,yDAEA,WAAqB,IAAD,OAClBC,KAAKD,QAAUE,aAAY,WACzB,EAAKC,SAAS,CAAEL,KAAM,IAAIC,OAG1BK,QAAQC,IAAI,EAAKR,MAAMC,KAAKQ,wBAC3B,O,kCAGL,WACML,KAAKD,SACPO,cAAcN,KAAKD,W,oBAIvB,WACE,OACE,mCACGC,KAAKJ,MAAMC,KAAKQ,2B,GAzBLE,IAAMC,WA+BXb,ICzBTc,E,4MACJb,MAAe,CACbc,WAAY,YACZC,gBAAgB,G,wDAGlB,SAAmBC,EAAmBC,GAChCA,EAAUH,aAAeV,KAAKJ,MAAMc,YAEtCP,QAAQC,IAAR,qCAA0CS,EAAUH,WAApD,eAAqEV,KAAKJ,MAAMc,e,oBAIpF,WAAU,IAAD,OACDI,EAAiB,SAACC,GACN,OAAZA,EACF,EAAKb,SAAS,CAAES,gBAAgB,IACX,QAAZI,GACT,EAAKb,SAAS,CAAES,gBAAgB,KAQpC,OACE,sBAAKK,UAAU,MAAf,UACE,6CACA,8CAEG,IACAhB,KAAKJ,MAAMe,gBAAkB,cAAC,EAAD,OAEhC,wBAAQM,KAAK,SAASC,QAAS,kBAAMJ,EAAe,OAApD,wBAGA,wBAAQG,KAAK,SAASC,QAAS,kBAAMJ,EAAe,QAApD,wBAGA,wBACEK,KAAMC,OAAOpB,KAAKJ,MAAMc,YACxBO,KAAK,SACLC,QArBgB,WACpB,EAAKhB,SAAS,CAAEQ,WAAYU,OAAOC,KAAKC,MAAsB,IAAhBD,KAAKE,cAiBjD,oC,GAxCUhB,IAAMC,WAoDTC,IC7Dfe,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.800383d8.chunk.js","sourcesContent":["import React from 'react';\n\ntype State = {\n  date: Date;\n};\n\nclass Clock extends React.Component<{}, State> {\n  state: State = {\n    date: new Date(),\n  };\n\n  timerId?: NodeJS.Timeout;\n\n  componentDidMount() {\n    this.timerId = setInterval(() => {\n      this.setState({ date: new Date() });\n\n      // eslint-disable-next-line\n      console.log(this.state.date.toLocaleTimeString());\n    }, 1000);\n  }\n\n  componentWillUnmount() {\n    if (this.timerId) {\n      clearInterval(this.timerId);\n    }\n  }\n\n  render() {\n    return (\n      <>\n        {this.state.date.toLocaleTimeString()}\n      </>\n    );\n  }\n}\n\nexport default Clock;\n","import React from 'react';\nimport './App.scss';\nimport Clock from './Components/Clock';\n\ntype State = {\n  randomName: string;\n  isClockVisible: boolean;\n};\n\ntype Props = {};\n\n// eslint-disable-next-line react/prefer-stateless-function\nclass App extends React.Component<Props, State> {\n  state: State = {\n    randomName: 'randomNum',\n    isClockVisible: true,\n  };\n\n  componentDidUpdate(_prevProps: Props, prevState: State) {\n    if (prevState.randomName !== this.state.randomName) {\n      // eslint-disable-next-line no-console\n      console.log(`The Clock was renamed from ${prevState.randomName} to ${this.state.randomName}`);\n    }\n  }\n\n  render() {\n    const handleSwitcher = (typeBtn: string) => {\n      if (typeBtn === 'on') {\n        this.setState({ isClockVisible: true });\n      } else if (typeBtn === 'off') {\n        this.setState({ isClockVisible: false });\n      }\n    };\n\n    const setRandomName = () => {\n      this.setState({ randomName: String(Math.round(Math.random() * 100)) });\n    };\n\n    return (\n      <div className=\"App\">\n        <h1>React clock</h1>\n        <p>\n          Current time:\n          {' '}\n          {this.state.isClockVisible && <Clock />}\n        </p>\n        <button type=\"button\" onClick={() => handleSwitcher('on')}>\n          Show Clock\n        </button>\n        <button type=\"button\" onClick={() => handleSwitcher('off')}>\n          Hide Clock\n        </button>\n        <button\n          name={String(this.state.randomName)}\n          type=\"button\"\n          onClick={setRandomName}\n        >\n          Set random name\n        </button>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}