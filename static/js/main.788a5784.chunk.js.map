{"version":3,"sources":["Components/Clock.tsx","App.tsx","index.tsx"],"names":["Clock","state","date","Date","timerId","this","setInterval","setState","console","log","toLocaleTimeString","_prevProps","name","props","clearInterval","React","Component","App","isClockVisible","className","type","onClick","prev","String","Math","round","random","ReactDOM","render","document","getElementById"],"mappings":"sNAUMA,E,4MACJC,MAAe,CACbC,KAAM,IAAIC,M,EAGZC,a,yDAEA,WAAqB,IAAD,OAClBC,KAAKD,QAAUE,aAAY,WACzB,EAAKC,SAAS,CAAEL,KAAM,IAAIC,OAG1BK,QAAQC,IAAI,EAAKR,MAAMC,KAAKQ,wBAC3B,O,gCAGL,SAAmBC,GACbA,EAAWC,OAASP,KAAKQ,MAAMD,MAEjCJ,QAAQC,IAAR,qCAA0CE,EAAWC,KAArD,eAAgEP,KAAKQ,MAAMD,S,kCAI/E,WACMP,KAAKD,SACPU,cAAcT,KAAKD,W,oBAIvB,WACE,OACE,mCACGC,KAAKJ,MAAMC,KAAKQ,2B,GAhCLK,IAAMC,WAsCXhB,ICvCTiB,E,4MACJhB,MAAe,CACbW,KAAM,IACNM,gBAAgB,G,4CAGlB,WAAU,IAAD,OASP,OACE,sBAAKC,UAAU,MAAf,UACE,6CACA,8CAEG,IACAd,KAAKJ,MAAMiB,gBAAkB,cAAC,EAAD,CAAON,KAAMP,KAAKJ,MAAMW,UAExD,wBAAQQ,KAAK,SAASC,QAhBH,WACrB,EAAKd,UAAS,SAAAe,GAAI,MAAK,CAAEJ,gBAAiBI,EAAKJ,oBAe7C,uBAGA,wBACEE,KAAK,SACLC,QAjBgB,WACpB,EAAKd,SAAS,CAAEK,KAAMW,OAAOC,KAAKC,MAAsB,IAAhBD,KAAKE,cAc3C,oC,GA1BUX,IAAMC,WAqCTC,IC3CfU,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.788a5784.chunk.js","sourcesContent":["import React from 'react';\n\ntype State = {\n  date: Date;\n};\n\ntype Props = {\n  name: string\n};\n\nclass Clock extends React.Component<Props, State> {\n  state: State = {\n    date: new Date(),\n  };\n\n  timerId?: NodeJS.Timeout;\n\n  componentDidMount() {\n    this.timerId = setInterval(() => {\n      this.setState({ date: new Date() });\n\n      // eslint-disable-next-line\n      console.log(this.state.date.toLocaleTimeString());\n    }, 1000);\n  }\n\n  componentDidUpdate(_prevProps: Props) {\n    if (_prevProps.name !== this.props.name) {\n      // eslint-disable-next-line no-console\n      console.log(`The Clock was renamed from ${_prevProps.name} to ${this.props.name}`);\n    }\n  }\n\n  componentWillUnmount() {\n    if (this.timerId) {\n      clearInterval(this.timerId);\n    }\n  }\n\n  render() {\n    return (\n      <>\n        {this.state.date.toLocaleTimeString()}\n      </>\n    );\n  }\n}\n\nexport default Clock;\n","import React from 'react';\nimport './App.scss';\nimport Clock from './Components/Clock';\n\ntype State = {\n  name: string;\n  isClockVisible: boolean;\n};\n\nclass App extends React.Component<{}, State> {\n  state: State = {\n    name: '1',\n    isClockVisible: true,\n  };\n\n  render() {\n    const handleSwitcher = () => {\n      this.setState(prev => ({ isClockVisible: !prev.isClockVisible }));\n    };\n\n    const setRandomName = () => {\n      this.setState({ name: String(Math.round(Math.random() * 100)) });\n    };\n\n    return (\n      <div className=\"App\">\n        <h1>React clock</h1>\n        <p>\n          Current time:\n          {' '}\n          {this.state.isClockVisible && <Clock name={this.state.name} />}\n        </p>\n        <button type=\"button\" onClick={handleSwitcher}>\n          Show/Hide\n        </button>\n        <button\n          type=\"button\"\n          onClick={setRandomName}\n        >\n          Set random name\n        </button>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}